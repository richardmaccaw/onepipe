name: Generate Deploy Branch

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  generate-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install json utility
        run: npm install -g json

      - name: Create deployable version
        run: |
          # Extract catalog dependencies from pnpm-workspace.yaml
          # This creates a temporary file with package:version mappings
          cat pnpm-workspace.yaml | sed -n '/catalogs:/,/^[^ ]/p' | grep '^\s*"' | sed 's/[[:space:]]*"\([^"]*\)":[[:space:]]*"\([^"]*\)".*/\1=\2/' > catalog-deps.txt

          # Create a backup of package.json
          cp package.json package.json.bak

          # Replace catalog references with actual versions
          while IFS='=' read -r pkg version; do
            # Replace in package.json using json utility
            json -I -f package.json -e "
              if (this.dependencies && this.dependencies['$pkg'] && this.dependencies['$pkg'].includes('catalog')) {
                this.dependencies['$pkg'] = '$version';
              }
              if (this.devDependencies && this.devDependencies['$pkg'] && this.devDependencies['$pkg'].includes('catalog')) {
                this.devDependencies['$pkg'] = '$version';
              }
            "
          done < catalog-deps.txt

          # Remove workspace dependencies and update scripts
          json -I -f package.json \
            -e "delete this.dependencies['@onepipe/core']" \
            -e "delete this.dependencies['@onepipe/destination-bigquery']" \
            -e "this.scripts = {deploy: 'wrangler deploy', dev: 'wrangler dev'}"

          # Clean up
          rm -f catalog-deps.txt package.json.bak
          rm -rf pnpm-workspace.yaml packages pnpm-lock.yaml

          # Install with npm
          npm install

          # Add deploy-specific README
          cat > README-DEPLOY.md << 'EOF'
          # OnePipe - Deploy Branch

          [![Deploy to Cloudflare Workers](https://deploy.workers.cloudflare.com/button)](https://deploy.workers.cloudflare.com/?url=https://github.com/richardmaccaw/onepipe/tree/deploy)

          This is an auto-generated branch optimized for Cloudflare deployment.

          **Source:** [main branch](https://github.com/richardmaccaw/onepipe)
          EOF

      - name: Push to deploy branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b deploy
          git add .
          git commit -m "Deploy version from main@${GITHUB_SHA::7}"
          git push --force origin deploy
